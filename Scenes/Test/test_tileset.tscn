[gd_scene load_steps=3 format=3 uid="uid://bkcqc2hgnth6j"]

[ext_resource type="PackedScene" uid="uid://bqx8oli2alvcf" path="res://Scenes/Play/main.tscn" id="1_krjag"]

[sub_resource type="GDScript" id="GDScript_kcfb2"]
resource_name = "test_tileset"
script/source = "extends Node2D

@onready var Main = $Main
@onready var Tilemap : TileMap = $Main/TileMap

var should_draw = false
var neighbor_directions

func _ready():
	var Tileset : TileSet = Tilemap.tile_set
	neighbor_directions = [
		Vector2i(0, 1),
		Vector2i(0, -1),
		Vector2i(1, 0),
		Vector2i(-1, 0),
	]

func _process(_delta):
	queue_redraw()

func get_solidness_around(cell_pos : Vector2i):
	var data : TileData = Tilemap.get_cell_tile_data(0, cell_pos)
	var is_solid = false
	if data:
		is_solid = data.get_custom_data(\"solid\")
	return is_solid

func get_neighbor_cells(cell_pos : Vector2i):
	var cells = []
	for offset in neighbor_directions:
		cells.append(cell_pos + offset)
	return cells

func _draw():
	if not should_draw:
		should_draw = true
		return
	var mouse_position = get_global_mouse_position()
	
	var mouse_position_map = Tilemap.local_to_map(mouse_position)#Tilemap.get_local_mouse_position()
	var surrounding = get_neighbor_cells(mouse_position_map)
	for cell_pos in surrounding:
		var is_solid = get_solidness_around(cell_pos)
		
		var dir = Vector2(cell_pos - mouse_position_map)
		var color = Color.DARK_RED if is_solid else Color.DARK_GREEN
		draw_line(mouse_position, mouse_position + dir.normalized()*40, color, 20)
		
"

[node name="test_tileset" type="Node2D"]
script = SubResource("GDScript_kcfb2")

[node name="Main" parent="." instance=ExtResource("1_krjag")]
