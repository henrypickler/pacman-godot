[gd_scene load_steps=3 format=3 uid="uid://bkcqc2hgnth6j"]

[ext_resource type="PackedScene" uid="uid://bqx8oli2alvcf" path="res://Scenes/Play/Play.tscn" id="1_krjag"]

[sub_resource type="GDScript" id="GDScript_kcfb2"]
resource_name = "test_tileset"
script/source = "extends Node2D

@onready var Main = $Main
@onready var Tilemap : TileMap = $Main/TileMap

var should_draw = false
var neighbor_directions

var point_select = true
var point1 = Vector2(0, 0)
#var point2 = Vector2(10, 10)

func _ready():
	var Tileset : TileSet = Tilemap.tile_set
	neighbor_directions = [
		Vector2i(0, 1),
		Vector2i(0, -1),
		Vector2i(1, 0),
		Vector2i(-1, 0),
	]

func _process(_delta):
	queue_redraw()

func get_solidness_around(cell_pos : Vector2i):
	var data : TileData = Tilemap.get_cell_tile_data(0, cell_pos)
	var is_solid = false
	if data:
		is_solid = data.get_custom_data(\"solid\")
	return is_solid

func get_neighbor_cells(cell_pos : Vector2i):
	var cells = []
	for offset in neighbor_directions:
		cells.append(cell_pos + offset)
	return cells

func _draw():
	var mouse_position = get_global_mouse_position()
	
	var mouse_position_map = Tilemap.local_to_map(mouse_position)#Tilemap.get_local_mouse_position()
	var surrounding = get_neighbor_cells(mouse_position_map)
	for cell_pos in surrounding:
		var is_solid = get_solidness_around(cell_pos)
		
		var dir = Vector2(cell_pos - mouse_position_map)
		var color = Color.DARK_RED if is_solid else Color.DARK_GREEN
		draw_line(mouse_position, mouse_position + dir.normalized()*40, color, 20)
	
	
	var rect = Tilemap.get_used_rect()
	for x in range(rect.position.x, rect.end.x):
		for y in range(rect.position.y, rect.end.y):
			var point = Tilemap.astar.get_closest_point(Vector2(x, y))
			var conn = Tilemap.astar.get_point_connections(point)
			if len(conn) < 1:
				continue
			for p in conn:
				var p2 = Tilemap.astar.get_point_position(p)
				draw_line(Vector2(x, y)*16 + Vector2.ONE*8, p2*16 + Vector2.ONE*8, Color.PURPLE)
	
	
	var point2 = get_viewport().get_mouse_position()/16
	var p1_id = Tilemap.astar.get_closest_point(point1)
	var p2_id = Tilemap.astar.get_closest_point(point2)
	var path_list = Tilemap.astar.get_point_path(p1_id, p2_id)
	for i in len(path_list)-1:
		draw_line(path_list[i]*16, path_list[i+1]*16, Color.GREEN)
	
	print(Tilemap.get_distance_between_points(point1, point2))

func _input(event):
	if event is InputEventMouseButton:
		point1 = event.position/16
		
		point_select = not point_select
"

[node name="test_tileset" type="Node2D"]
script = SubResource("GDScript_kcfb2")

[node name="Main" parent="." instance=ExtResource("1_krjag")]
